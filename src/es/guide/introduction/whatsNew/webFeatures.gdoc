
{hidden}

h4. Controller Actions as Methods

It is now possible to define controller actions as methods instead of using closures as in previous versions of Grails. In fact this is now the preferred way of expressing an action. For example:

{code}
// action as a method
def index() {

}
// action as a closure
def index = {

}
{code}
{hidden}

H4. Acciones de controlador como m√©todosAhora es posible definir acciones de controlador como m√©todos en lugar de usar los cierres como en versiones anteriores de Grails. De hecho ahora es la forma preferida de expresar una acci√≥n. Por ejemplo:{C√≥digo}/ / acci√≥n como un m√©todoDef √≠ndice() {}}/ / acci√≥n como un cierre√≠ndice de Def = {}}{C√≥digo}

{hidden}


h4. Binding Primitive Method Action Arguments

It is now possible to bind form parameters to action arguments where the name of the form element matches the argument name. For example given the following form:

{code:xml}
<g:form name="myForm" action="save">
    <input name="name" />
    <input name="age" />
</g:form>
{code}
{hidden}

H4. Argumentos de acci√≥n del m√©todo primitivo de enlaceAhora es posible enlazar par√°metros de formulario a argumentos de acci√≥n donde el nombre del elemento de formulario coincide con el nombre de argumento. Por ejemplo, dada la forma siguiente:{C√≥digo: xml}<g:form name="myForm" action="save">    <input name="name">    <input name="age"></g:form>{C√≥digo}

{hidden}


You can define an action that declares arguments for each input and automatically converts the parameters to the appropriate type:

{code}
def save(String name, int age) {
    // remaining
}
{code}

h4. Static Resource Abstraction
{hidden}

Puede definir una acci√≥n que declara argumentos para cada entrada y convierte autom√°ticamente los par√°metros para el tipo adecuado:{C√≥digo}Def guardar (String name, int edad) {}    / / restantes}{C√≥digo}H4. Abstracci√≥n de recurso est√°tico

{hidden}


A new [static resource abstraction|guide:resources] is included that allows declarative handling of JavaScript, CSS and image resources including automatic ordering, compression, caching and gzip handling.

h4. Servlet 3.0 Async Features

Grails now supports Servlet 3.0 including the Asynchronous programming model defined by the specification:

{code}
def index() {
    def ctx = startAsync()
    ctx.start {
        new Book(title:"The Stand").save()
        render template:"books", model:[books:Book.list()]
        ctx.complete()
    }
}
{code}
{hidden}

Se incluye un nuevo [recursos est√°ticos abstraction|guide:resources] que permite declarativa manejo de imagen, CSS y JavaScript recursos incluyendo pedidos autom√°tica, compresi√≥n, almacenamiento en cach√© y manejo de gzip.H4. Caracter√≠sticas de Async servlet 3.0Grails ahora soporta Servlet 3.0 incluyendo el modelo de programaci√≥n asincr√≥nico, definido por la especificaci√≥n:{C√≥digo}Def √≠ndice() {}    Def ctx = startAsync()    CTX.Start {}        nuevo libro (t√≠tulo: "la Stand").save()        plantilla de procesamiento: "libros", model:[books:Book.list()]        CTX.Complete()    }}{C√≥digo}

{hidden}


h4. Link Generation API

A general purpose @LinkGenerator@ class is now available that is usable anywhere within a Grails application and not just within the context of a controller. For example if you need to generate links in a service or an asynchronous background job outside the scope of a request:

{code}
LinkGenerator grailsLinkGenerator

def generateLink() {
    grailsLinkGenerator.link(controller:"book", action:"list")
}
{code}
{hidden}

H4. Generaci√≥n de enlace APIUn prop√≥sito general @ LinkGenerator @ clase ya est√° disponible es utilizable en cualquier lugar dentro de una aplicaci√≥n Grails y no s√≥lo en el contexto de un controlador. Por ejemplo, si necesita generar enlaces en un servicio o un trabajo de fondo asincr√≥nica fuera del alcance de una solicitud:{C√≥digo}LinkGenerator grailsLinkGeneratorDef generateLink() {}    grailsLinkGenerator.link (controlador: "reserva", acci√≥n: "lista")}{C√≥digo}

{hidden}


h4. Page Rendering API

Like the @LinkGenerator@ the new @PageRenderer@ can be used to render GSP pages outside the scope of a web request, such as in a scheduled job or web service. The @PageRenderer@ class features a very similar API to the @render@ method found within controllers:

{code}
grails.gsp.PageRenderer groovyPageRenderer

void welcomeUser(User user) {
    def contents = groovyPageRenderer.render(view:"/emails/welcomeLetter", model:[user: user])
    sendEmail {
        to user.email
        body contents
    }
}
{code}
{hidden}

H4. API de procesamiento de p√°ginaComo la @ LinkGenerator @ el nuevo @ PageRenderer @ puede utilizarse para procesar p√°ginas SPG fuera del alcance de una solicitud web, como en una tarea programada o servicio web. @ PageRenderer @ caracter√≠sticas de clase una API muy similar para el procesamiento de @ @ m√©todo que se encuentra dentro de los controladores:{C√≥digo}Grails.GSP.PageRenderer groovyPageRenderervoid welcomeUser (usuario) {}    contenido de Def = groovyPageRenderer.render (vista: "/ mensajes/welcomeLetter", modelo: [usuario: usuario])    sendEmail {}        a user.email        contenido del cuerpo    }}{C√≥digo}

{hidden}


The @PageRenderer@ service also allows you to pre-process GSPs into HTML templates:

{code}
new File("/path/to/welcome.html").withWriter { w ->
    groovyPageRenderer.renderTo(view:"/page/content", w)
}
{code}

h4. Filter Exclusions
{hidden}

@ PageRenderer @ servicio permite preprocesar GSPs en plantillas HTML:{C√≥digo}Nueva File("/path/to/welcome.html").withWriter {w->    groovyPageRenderer.renderTo (vista: "por contenido de la p√°gina" w)}{C√≥digo}H4. Exclusiones de filtro

{hidden}


Filters may now express controller, action and uri exclusions to offer more options for expressing to which requests a particular filter should be applied.

{code}

filter1(actionExclude: 'log*') {
    before = {
        // …
    }
}
filter2(controllerExclude: 'auth') {
    before = {
        // …
    }
}

filter3(uriExclude: '/secure*') {
    before = {
        // …
    }
}
{code}
{hidden}

Filtros pueden expresar hoy controlador, acci√≥n y exclusiones de uri para ofrecer m√°s opciones para expresar a las solicitudes que deber√≠a aplicarse un filtro espec√≠fico.{C√≥digo}filter1 (actionExclude: ' registro *') {}    antes = {}        / / √â    }}Sniffer2 (controllerExclude: 'auth') {}    antes = {}        / / √â    }}filter3 (uriExclude: ' / segura *') {}    antes = {}        / / √â    }}{C√≥digo}

{hidden}


h4. Performance Improvements

Performance of GSP page rendering has once again been improved by optimizing the GSP compiler to inline method calls where possible.

h4. HTML5 Scaffolding

There is a new HTML5-based scaffolding UI:

!scaffolding-ui.png!
{hidden}

H4. Mejoras en el rendimientoUna vez m√°s ha mejorado el rendimiento de la representaci√≥n de la p√°gina del SGP mediante la optimizaci√≥n del compilador SGP llamadas al m√©todo en l√≠nea siempre que sea posible.H4. Andamios HTML5Hay un nuevo andamiaje basada en HTML5 UI:! ui.png andamios!

{hidden}


h4. jQuery by Default

The jQuery plugin is now the default JavaScript library installed into a Grails application. For backwards compatibility a [Prototype plugin|http://grails.org/plugin/prototype] is available. Refer to the [documentation|http://grails.org/plugin/prototype] on the Prototype plugin for installation instructions.
{hidden}

H4. jQuery por defectoEl plugin jQuery ahora es la biblioteca de JavaScript por defecto instalada en una aplicaci√≥n de Grails. Para atr√°s compatibilidad [plugin|http://grails.org/plugin/prototype de prototipo] est√° disponible. Consulte [documentation|http://grails.org/plugin/prototype] en el plugin de prototipo para obtener instrucciones de instalaci√≥n.
