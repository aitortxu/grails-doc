
{hidden}

Grails has built-in support for handling duplicate form submissions using the "Synchronizer Token Pattern". To get started you define a token on the [form|tags] tag:

{code:xml}
<g:form useToken="true" ...>
{code}

Then in your controller code you can use the [withForm|controllers] method to handle valid and invalid requests:

{code:java}
withForm {
   // good request
}.invalidToken {
   // bad request
}
{code}
{hidden}

Grails tiene compatibilidad integrada para el manejo de envíos de formularios duplicados mediante el "patrón Token Sincronizador". Para empezar se define un símbolo (token) en la etiqueta [form|tags]:

{Código: xml}
<g:form usetoken="true" ...="">
{code}

A continuación, en el código del controlador puede utilizar el método [withForm|controllers] para gestionar solicitudes válidas y no válidas:

{code: java}
withForm {}
   / / solicitud de buena
} .invalidtoken {}
   / / solicitud incorrecta
}
{código}</g:form>

{hidden}


If you only provide the [withForm|controllers] method and not the chained @invalidToken@ method then by default Grails will store the invalid token in a @flash.invalidToken@ variable and redirect the request back to the original page. This can then be checked in the view:

{code:xml}
<g:if test="${flash.invalidToken}">
  Don't click the button twice!
</g:if>
{code}

{warning}
{hidden}

Si sólo proporciona el método [withForm|controllers] y no el encadenado @ invalidToken @ método entonces por defecto Grails almacenar el código no válido en una variable @flash.invalidToken@ y redirigir la petición a la página original. Esto puede comprobarse en la vista:

{Código: xml}
<g:if test="${flash.invalidToken}">
  No haga clic en el botón dos veces!
</g:if>
{code}

Advertencia de {}

{hidden}

The [withForm|controllers] tag makes use of the [session|controllers] and hence requires session affinity or clustered sessions if used in a cluster.
{warning}
{hidden}

[WithForm|controllers] la etiqueta hace uso de [session|controllers] y por lo tanto requiere afinidad de sesión o sesiones agrupadas si utiliza en un clúster.
Advertencia de {}
