
{hidden}

To create a simple mapping simply use a relative URL as the method name and specify named parameters for the controller and action to map to:

{code:java}
"/product"(controller: "product", action: "list")
{code}

In this case we've mapped the URL @/product@ to the @list@ action of the @ProductController@. Omit the action definition to map to the default action of the controller:

{code:java}
"/product"(controller: "product")
{code}
{hidden}

Para crear una simple asignación simplemente utilizar una dirección URL relativa como el nombre del método y especificar parámetros con nombre para el controlador y acción asignar a:

{code: java}
"/ producto" (controlador: "producto", acción: "lista")
{code}

En este caso nos hemos asignado el URL @ / producto @ a la lista @ @ Acción de @ ProductController @. Omite la definición de acción para asignar a la acción predeterminada del controlador:

{code: java}
"/ producto" (controlador: "producto")
{code}

{hidden}


An alternative syntax is to assign the controller and action to use within a block passed to the method:

{code:java}
"/product" {
    controller = "product"
    action = "list"
}
{code}

{hidden}

Una sintaxis alternativa es asignar el controlador y acción para utilizar dentro de un bloque que se pasa al método:

{code: java}
"/ producto" {}
    controlador = "producto"
    acción = "lista"
}
{code}

{hidden}

Which syntax you use is largely dependent on personal preference. To rewrite one URI onto another explicit URI (rather than a controller/action pair) do something like this:

{code}
"/hello"(uri: "/hello.dispatch")
{code}

Rewriting specific URIs is often useful when integrating with other frameworks.
{hidden}

Qué sintaxis utilice depende en gran medida de la preferencia personal. Para reescribir un URI al otro explícito URI (en lugar de un par de controlador/acción) hacer algo como esto:

{code}
"/ Hola" (uri: "/ hello.dispatch")
{code}

Reescribir URIs específicas a menudo es útil cuando se integra con otros marcos.
