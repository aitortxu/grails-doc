
{hidden}

h1. generate-all

h2. Purpose

Generates a controller, views, and a controller unit test for the given domain class

h2. Examples

{code:java}
grails generate-all org.bookstore.Book
grails generate-all *
{code}
{hidden}

h1. generar todo

h2. Fin

Genera un controlador, vistas y una prueba de unidad de controlador para la clase de dominio

h2. Ejemplos

{code: java}
Grails todo generar org.bookstore.Book
Grails generar todo *
{code}

{hidden}


h2. Description

Grails supports a feature known as scaffolding which involves the generation of a CRUD (Create/Read/Update/Delete) interface for a given domain class.

The generate-all command generates an implementation of CRUD including a controller and views for the given domain class. So for a domain class @org.bookstore.Book@ a controller in @grails-app/controllers/org/bookstore/BookController.groovy@ and views in @grails-app/views/book@ will be generated.

Usage:
{code:java}
grails generate-all [name]
{code}
{hidden}

h2. Descripción

Grails admite una característica conocida como andamiaje que implica la generación de una interfaz CRUD (Create, Read, Update/Delete) para una clase de dominio dado.

El comando generar, todo ello genera una implementación de CRUD incluyendo un controlador y vistas para la clase de dominio dado. Así que para un @org.bookstore.Book@ de clase de dominio se generará un controlador en @grails-app/controllers/org/bookstore/BookController.groovy@ y vistas en @ grails-app/views/libro @.

Uso:
{code: java}
Grails generar-todos [nombre]
{code}

{hidden}


Fired Events:

* @StatusUpdate@ - When generation begins
* @StatusFinal@ - When generation completes

Arguments:

* @name@ - Either a domain class name (case-sensitive) or a wildcard (\*). If you specify the wildcard then controllers and views will be generated for _all_ domain classes.
{hidden}

Despedido de eventos:

* @ StatusUpdate @ - cuando comienza la generación
* @ StatusFinal @ - cuando termina la generación

Argumentos:

* @ nombre @ - ya sea un dominio clase nombre (entre mayúsculas y minúsculas) o un comodín (\ *). Si especifica el comodín, a continuación, controladores y vistas se generarán para clases de dominio _all_.
