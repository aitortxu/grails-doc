
{hidden}

h1. war

h2. Purpose

The @war@ command creates a Web Application Archive (WAR) file which can be deployed on any Java EE compliant application server.

h2. Examples

{code:java}
grails war
grails test war
grails -Dgrails.env=staging war
{code}
{hidden}

h1. Guerra

h2. Fin

La guerra @ @ comando crea un archivo de archivado de aplicación Web (guerra) que puede utilizarse en cualquier servidor de aplicaciones compatible con Java EE.

h2. Ejemplos

{code: java}
Guerra Grails
Grails prueba guerra
Grails-Dgrails.env=staging guerra
{code}

{hidden}


h2. Description

Usage:
{code:java}
grails [environment]* war [filename]* [arguments]*
{code}

Arguments:

{hidden}

h2. Descripción

Uso:
{code: java}
Grails [entorno] * guerra [archivo] * [argumentos] *
{code}

Argumentos:

{hidden}

* @filename@ - The path and name to use in place of the default
* @nojars@ - Packages the WAR with no jar files. Used for shared deployment

Fired Events:

* @StatusFinal@ - When the WAR file has been created

By default the @war@ command creates a web application archive (WAR) file using the application name and version number. The @war@ command is different from most commands since it runs in the production environment by default instead of development, but like any script the environment can be specified using the standard convention:

{code:java}
grails test war
grails dev war
grails prod war
grails war /foo/bar/mywar.war
grails war --nojars
{code}
{hidden}

* @ filename @ - la ruta y el nombre que se utiliza en lugar del predeterminado
* @ nojars @ - paquetes la guerra sin archivos jar. Usado para la implementación compartida

Despedido de eventos:

* @ StatusFinal @ - archivo cuando la guerra se ha creado

De forma predeterminada la guerra @ @ comando crea un archivo contenedor (guerra) de aplicación web utilizando el número de nombre y versión de la aplicación. La guerra @ @ comando es diferente de la mayoría de los comandos ya se ejecuta en el entorno de producción de forma predeterminada, en lugar de desarrollo, pero como cualquier secuencia de comandos el entorno puede especificarse mediante la Convención estándar:

{code: java}
Grails prueba guerra
Guerra de dev Grails
Grails prod guerra
Grails guerra /foo/bar/mywar.war
Grails guerra--nojars
{code}

{hidden}


You can also specify a custom environment:

{code:java}
grails -Dgrails.env=UAT war
{code}

Once the WAR has been created you can deploy it to your container using its standard WAR deployment process.
{hidden}

También puede especificar un entorno personalizado:

{code: java}
Grails-Dgrails.env=UAT guerra
{code}

Una vez que se ha creado la guerra puede desplegar a su contenedor mediante su proceso de implementación estándar de guerra.
