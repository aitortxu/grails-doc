
{hidden}

h1. batchSize

h2. Purpose

Customizes how many results are fetching during lazy loading.

h2. Examples

{code:java}
class Book {
    ...
    static mapping = {
        batchSize 10
    }
}
{code}
{hidden}

h1. batchSize

h2. Fin

Personaliza la obtención de cuántos resultados durante la carga diferida.

h2. Ejemplos

{code: java}
clase {libro
    ...
    asignación estática = {}
        batchSize 10
    }
}
{code}

{hidden}


h2. Description

Usage: @batchSize(integer)@

Given a lazy association where an @Author@ has many @Book@s, GORM will perform one query for the @Author@ and additional queries the associated @Book@s. This is what is known as the N+1 problem and can often be worked around by using a join query. However, joins can be expensive.

Batch fetching is an optimization of lazy loading so that if, for example, you set a @batchSize@ of 10 and you have an @Author@ that with 30 books, instead of 31 queries you get four (one for the @Author@ and three batches of 10):

{code}
static mapping = {
    batchSize 10
}
{code}
{hidden}

h2. Descripción

Uso: @ batchSize(integer) @

Dada una asociación perezosa donde un autor @ @ tiene muchas @ Book@s, GORM realizará una consulta para el autor @ @ y consultas adicionales el asociado @ Book@s. Esto es lo que se conoce como el problema N 1 y a menudo pueden ser trabajada alrededor mediante una consulta de combinación. Sin embargo, puede ser costoso.

Recuperar el lote es una optimización de carga diferida por lo que si, por ejemplo, se establece un batchSize @ @ de 10 y tiene un autor @ @ que con 30 libros, en lugar de 31 consultas obtendrá cuatro (uno para el autor @ @ y tres lotes de 10):

{code}
asignación estática = {}
    batchSize 10
}
{code}

{hidden}


You can also configure @batchSize@ on a per association basis:

{code}
class Author {

    static hasMany = [books: Book]

    static mapping = {
        books batchSize: 10
    }
}
{code}
{hidden}

También puede configurar @ batchSize @ sobre una base de asociación por:

{code}
clase {autor

estático hasMany = [libros: libro]

asignación estática = {}
        libros batchSize: 10
    }
}
{code}
