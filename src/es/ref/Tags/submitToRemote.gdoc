
{hidden}

h1. submitToRemote

h2. Purpose

Creates a button that submits the containing form as a remote Ajax call, serializing the fields into parameters.

h2. Examples

Example controller for an application called "shop":

{hidden}

h1. submitToRemote

h2. Fin

Crea un botón que envía el formulario que contiene como una llamada remota de Ajax, serializar los campos en los parámetros.

h2. Ejemplos

Controlador de ejemplo de una aplicación llamada "comprar":

{hidden}

{code:java}
class BookController {

    def list() {
        [books: Book.list(params)]
    }

    def show() {
        [book: Book.get(params.id)]
    }
}
{code}
{hidden}

{code: java}
clase BookController {}

Def list() {}
        [libros: Book.list(params)]
    }

Def show() {}
        [libro: Book.get(params.id)]
    }
}
{code}

{hidden}


Example usages for above controller:

{code:xml}
<g:form action="show">
    Login: <input name="login" type="text" />
    <g:submitToRemote update="updateMe" />
</g:form>

<div id="updateMe">this div will be updated with the form submit response</div>
{code}
{hidden}

Usos de ejemplo por encima de controlador:

{Código: xml}
<g:form action="show">
    Inicio de sesión:<input name="login" type="text">
    <g:submittoremote update="updateMe"></g:submittoremote>
</g:form>

<div id="updateMe">Este div se actualizará con el formulario enviar respuesta</div>{code}

{hidden}


h2. Description

This tag creates a submit button that fires an AJAX request when it is pressed. The exact Javascript used to fire off the AJAX request depends on which Javascript library is used. This tag also requires the use of either the <g:[javascript|tags]/> or <g:[setProvider|tags]/> tags. See the [AJAX section|guide:ajax] of the user guide to find out more.

Attributes

* @url@ - The url to submit to, either a map contraining keys for the action, controller and id or a string value
* @update@ (optional) - Either a Map containing the elements to update for 'success' or 'failure' states, or a string with the element id to update, in which case failure events would be ignored
* @before@ (optional) - The JavaScript function to call before the remote function call. A semi-colon is automatically added so you don't have to provide one yourself in this string.
{hidden}

h2. Descripción

Esta etiqueta crea un botón de envío que se desencadena una petición AJAX cuando se presionan. El Javascript exacto utilizado para disparar la solicitud AJAX depende de qué biblioteca de Javascript se utiliza. Esta etiqueta también requiere el uso de cualquiera de las <g:[javascript|tags]></g:[javascript|tags]> o <g:[setprovider|tags]></g:[setprovider|tags]> etiquetas. Consulte [section|guide:ajax de AJAX] de la Guía del usuario para obtener más información.

Atributos

* @ url @ - que presentar a la dirección url, o bien un claves de contraining de mapa para la acción, el controlador y el id o un valor de cadena
* @ actualización @ (opcional) - ya sea un mapa que contiene los elementos para la actualización de 'éxito' o 'fracaso' Estados o una cadena con el id de elemento para actualizar, en cuyo caso sucesos de error podrían ignorarse
* @ antes @ (opcional) - JavaScript la función llamar antes de la llamada a función remota. Un punto y coma se agrega automáticamente por lo que no tendrás que proporcionar uno usted mismo en esta cadena.

{hidden}

* @after@ (optional) - The JavaScript function to call after the remote function call. A semi-colon is automatically added so you don't have to provide one yourself in this string.
* @asynchronous@ (optional) - Whether to do the call asynchronously (defaults to @true@)
* @method@ (optional) - The method to use the execute the call (defaults to POST)

Events

* @onSuccess@ (optional) - The JavaScript function to call if successful
* @onFailure@ (optional) - The JavaScript function to call if the call fails
* @on_ERROR_CODE@ (optional) - The JavaScript function to call to handle the specified error code (eg on404="alert('not found!')")
* @onUninitialized@ (optional) - The JavaScript function to call if Ajax fails to initialise
{hidden}

* @ después @ (opcional) - JavaScript la función llamar después de la llamada a función remota. Un punto y coma se agrega automáticamente por lo que no tendrás que proporcionar uno usted mismo en esta cadena.
* @ asincrónica @ (opcional): si al hacer la llamada asincrónica (defaults @ true @)
* @ método @ (opcional): el método a utilizar la ejecución de la llamada (de forma predeterminada al POST)

Eventos

* @ onSuccess @ (opcional) - JavaScript la función llamar si es correcto
* @ onFailure @ (opcional) - The JavaScript funcionar si la llamada falla
* @ on_ERROR_CODE @ (opcional) - JavaScript la función llamar para manejar el código de error especificado (p. ej. on404 = "alert ('no encontrado!')")
* @ onUninitialized @ (opcional) - JavaScript la función llamar si Ajax se produce un error al inicializar

{hidden}

* @onLoading@ (optional) - The JavaScript function to call when the remote function loads the response
* @onLoaded@ (optional) - The JavaScript function to call when the remote function completes loading the response
* @onComplete@ (optional) - The JavaScript function to call when the remote function completes, including any updates

h2. Source

{source:tag=JavascriptTagLib.submitToRemote}
{source}
{hidden}

* @ onLoading @ (opcional) - JavaScript la función llamar cuando la función remota carga la respuesta
* @ onLoaded @ (opcional) - JavaScript la función llamar una vez terminada la función remota cargar la respuesta
* @ onComplete @ (opcional) - JavaScript la función llamar cuando finaliza la función remota, incluidas las actualizaciones

h2. Fuente

{source:tag=JavascriptTagLib.submitToRemote}
origen de {}
